#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('FW:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Get twitter module to stream tweetss
 */

var Twitter = require('twitter');

/**
 * Get socket module to stream pipe browser and server
 */

var io = require('socket.io')(server);

/**
 * Twitter app credentials
 */

var client = new Twitter({
	consumer_key: '9BHeLsq2NTO2kPZKBSkcLm5No',
	consumer_secret: 'SAwsJ6odkwu0efTZ0v7LOCd6uJtWFZA5Wr6Y93q5qRK3ibFNDk',
	access_token_key: '3012074284-EqTcnHDMlEuP7fxF3XMSATQWRHteK3XVNOHiqOJ',
	access_token_secret: 'D1OQ40XjGsd0tUfo1qOfnLNSaJh0foFg2Xio8pVlRks7s'
});

/**
 * Define action on tweet matching
 */
		client.stream('statuses/filter', {track: 'javascript'}, function(stream) {
		stream.on('data', function(tweet) {
//			socket.emit('chat message', tweet.txt);
			console.log('tweet: ' + tweet.text);
			io.emit('chat message', tweet.text);
		})});

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
//server.on('tweet', onTweet);
console.log('This is where the magic happens ' + port);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}

//function onTweet() {
//  debug('Listening on port ' + server.address().port);
//}
